<?xml version="1.0" encoding="utf-8"?>
<mate:EventMap xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mate="http://mate.asfusion.com/"
	xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo">
	<fx:Script>
		<![CDATA[
			import com.slantsoft.events.*;
			import com.slantsoft.managers.*;
			import com.slantsoft.views.*;
			
			[Bindable] private var appOpenDate:Date = new Date();
			[Bindable] private var ep:String = 'http://slantsoft.com/flex2gateway';
			[Bindable] private var aumSource:String = 'com.slantsoft.facade.ApplicationUpdateManager';
			[Bindable] private var application_id:int = 1;
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<mate:Debugger level="{Debugger.ALL}"/>
		
		<mate:EventHandlers type="ApplicationInit">
			<mate:MethodInvoker generator="{DatabaseManager}" method="initDatabase"/>
			<mate:EventAnnouncer generator="{UpdateEvent}" type="{UpdateEvent.CHECK_FOR_UPDATE}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.INIT_COMPLETE}">
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_TRACKED_EVENTS}"/>
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_CLIENTS}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.GET_TRACKED_EVENTS}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getTrackedEvents" arguments="{appOpenDate}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.TRACKED_EVENTS_RESULTS}">
			<mate:MethodInvoker generator="{TrackingManager}" method="storeTrackedEvents" arguments="{event.recordSet}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.GET_CLIENTS}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getClients"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.CLIENTS}">
			<mate:MethodInvoker generator="{ClientManager}" method="storeClients" arguments="{event.recordSet}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.CREATE_CLIENT}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="createClient" arguments="{event.client}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.CREATE_CLIENT_COMPLETE}">
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_CLIENTS}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.DELETE_CLIENT}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="deleteClient" arguments="{event.client}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.DELETE_CLIENT_COMPLETE}">
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_CLIENTS}"/>
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.DELETE_CLIENT_EVENTS}">
				<mate:Properties client="{event.client}"/>
			</mate:EventAnnouncer>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.DELETE_CLIENT_EVENTS}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="deleteClientTrackedEvents" arguments="{event.client}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.DELETE_CLIENT_EVENTS_COMPLETE}">
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_TRACKED_EVENTS}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.UPDATE_CLIENT}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="updateClient" arguments="{event.client}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.UPDATE_CLIENT_COMPLETE}">
			<mate:EventAnnouncer generator="{DatabaseEvent}" type="{DatabaseEvent.GET_CLIENTS}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{TrackingEvent.START}">
			
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{TrackingEvent.STOP}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="storeNewTrackedEvent" arguments="{event}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{HistoryEvent.OPEN_WINDOW}">
			<mate:MethodInvoker generator="{NativeWindowManager}" method="openHistoryWindow"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.GET_TRACKED_EVENTS_DATES}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getHistoryDates"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.TRACKED_EVENTS_DATES}">
			<mate:MethodInvoker generator="{TrackingManager}" method="storeTrackedEventsDates" arguments="{event.recordSet}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{TrackingEvent.GET_TRACKED_EVENTS_BY_DATE}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getHistoryByDate" arguments="{event.dateString}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.TRACKED_EVENTS_BY_DATE}">
			<mate:MethodInvoker generator="{TrackingManager}" method="storeTrackedEventsByDate" arguments="{event.recordSet}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{DatabaseEvent.GET_TRACKED_EVENTS_DATES_BY_CLIENT}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getHistoryDatesByClient" arguments="{event.client}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{TrackingEvent.GET_TRACKED_EVENTS_BY_CLIENT}">
			<mate:MethodInvoker generator="{DatabaseManager}" method="getHistoryByDateAndClient" arguments="{[event.dateString, event.client]}"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{UpdateEvent.CHECK_FOR_UPDATE}">
			<mate:MethodInvoker generator="{UpdateManager}" method="checkForUpdate"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{UpdateEvent.GET_REMOTE_APP_DATA}">
			<mate:RemoteObjectInvoker endpoint="{ep}" source="{aumSource}" destination="ColdFusion" method="getAppData" arguments="{application_id}">
				<mate:resultHandlers>
					<mate:MethodInvoker generator="{UpdateManager}" method="storeAppData" arguments="{resultObject}"/>
				</mate:resultHandlers>
			</mate:RemoteObjectInvoker>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{UpdateEvent.OPEN_UPDATE_WINDOW}">
			<mate:MethodInvoker generator="{NativeWindowManager}" method="openUpdateWindow"/>
		</mate:EventHandlers>
		
		<mate:EventHandlers type="{ClientManagerEvent.OPEN}">
			<mate:MethodInvoker generator="{NativeWindowManager}" method="openClientManager"/>
		</mate:EventHandlers>
		
		<!-- Injectors -->
		
		<mate:Injectors targets="{[WhenWhatHowLong]}">
			<mate:PropertyInjector source="{TrackingManager}" sourceKey="trackedEvents" targetKey="trackedEvents"/>
		</mate:Injectors>
		
		<mate:Injectors target="{HistoryWindow}">
			<mate:PropertyInjector source="{TrackingManager}" sourceKey="trackedEventsDates" targetKey="trackedEventsDates"/>
			<mate:PropertyInjector source="{TrackingManager}" sourceKey="trackedEventsByDate" targetKey="trackedEventsByDate"/>
		</mate:Injectors>
		
		<mate:Injectors target="{UpdateWindow}">
			<mate:PropertyInjector source="{UpdateManager}" sourceKey="appData" targetKey="appData"/>
		</mate:Injectors>
		
		<mate:Injectors targets="{[WhenWhatHowLong, ClientManagerWindow, HistoryWindow]}">
			<mate:PropertyInjector source="{ClientManager}" sourceKey="clients" targetKey="clients"/>
		</mate:Injectors>
	</fx:Declarations>
</mate:EventMap>
