<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo"
	layout="vertical" xmlns:eventMaps="com.eventMaps.*"	width="500" height="300" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
	showStatusBar="false" minHeight="300" minWidth="500" horizontalScrollPolicy="off" verticalScrollPolicy="off" creationComplete="init()"
	xmlns:mate="http://mate.asfusion.com/">
	
	<fx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import com.slantsoft.events.ClientManagerEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import com.flexandair.StopWatch;
			import com.slantsoft.events.HistoryEvent;
			import com.slantsoft.events.TrackingEvent;
			
			private var _clients:Array;
			private var _trackedEvents:Array;
			private var startDate:Date;
			private var endDate:Date;
			
			[Bindable] private var stopWatch:StopWatch = new StopWatch();
			
			public function set clients(value:Array):void{
				_clients = value;
				dispatchEvent(new Event("clientsChanged"));
			}
			
			[Bindable ("clientsChanged")]
			public function get clients():Array{
				return _clients;
			}
			
			public function set trackedEvents(value:Array):void{
				_trackedEvents = value;
				dispatchEvent(new Event('trackedEventsChanged'));
			}
			
			[Bindable ('trackedEventsChanged')]
			public function get trackedEvents():Array{
				return _trackedEvents;
			}
			
			private function init():void{
				this.nativeWindow.x = (Capabilities.screenResolutionX - width) / 2;
				this.nativeWindow.y = (Capabilities.screenResolutionY - height) / 2;
				
				dispatcher.dispatchEvent(new Event('ApplicationInit'));
			}
			
			private function onStartStopTBClick():void{
				var message:String = '';
				if (descriptionTI.text == ''){
					message += 'A description is required\n';
				}
				
				if (!clientSelect.selectedItem){
					message += 'Please select a client\n';
				}
				
				if (descriptionTI.text != '' && clientSelect.selectedItem){
					var isSelected:Boolean = startStopTB.selected;
					var e:TrackingEvent;
					
					
					if (isSelected){
						startDate = new Date();
						e = new TrackingEvent(TrackingEvent.START);
						descriptionTI.enabled = false;
						timerLbl.addEventListener(Event.ENTER_FRAME,updateTime);
						stopWatch.start();
					} else {
						timerLbl.removeEventListener(Event.ENTER_FRAME,updateTime);
						stopWatch.pause();
						endDate = new Date();
						e = new TrackingEvent(TrackingEvent.STOP);
						e.description = descriptionTI.text;
						e.startDate = startDate;
						e.endDate = endDate;
						e.duration = timerLbl.text;
						descriptionTI.text = '';
						descriptionTI.enabled = true;
						stopWatch.reset();
						timerLbl.text = '00:00:00';
					}
					
					dispatcher.dispatchEvent(e);
				} else {
					startStopTB.selected = false;
					Alert.show(message,'Attention!');
				}
			}
			
			private function onHistoryBtnClick():void{
				var e:HistoryEvent = new HistoryEvent(HistoryEvent.OPEN_WINDOW);
				dispatcher.dispatchEvent(e);
			}
			
			private function onDescriptionTIEnterKey():void{
				startStopTB.selected = true;
				onStartStopTBClick();
			}
			
			private function updateTime(event:Event):void{
				var time:String = stopWatch.getTimeStampAsString();
				timerLbl.text = time;
			}
			
			private function startWatch():void{
				
			}

			protected function clientManagerBtn_clickHandler(event:MouseEvent):void
			{
				var e:ClientManagerEvent = new ClientManagerEvent(ClientManagerEvent.OPEN);
				dispatcher.dispatchEvent(e);
			}


			protected function clientSelect_changeHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
			}

		]]>
	</fx:Script>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<mx:Label text="Description" fontWeight="bold" fontSize="14"/>
		<mx:TextInput width="100%" id="descriptionTI" enter="onDescriptionTIEnterKey()"/>
		<s:ToggleButton label="Start / Stop" id="startStopTB" click="onStartStopTBClick()"/>
		<mx:Button label="History" id="historyBtn" click="onHistoryBtnClick()"/>
	</s:HGroup>
	
	<s:HGroup width="100%" verticalAlign="middle" textAlign="center">
		<mx:ComboBox editable="false" id="clientSelect" prompt="Select Client..." dataProvider="{clients}"
			labelField="name" change="clientSelect_changeHandler(event)"/>
		<mx:Spacer width="100%"/>
		<mx:Label text="Elapsed Time:"/>
		<mx:Label text="00:00:00" id="timerLbl"/>
	</s:HGroup>
	
	<mx:DataGrid width="100%" height="100%" dataProvider="{trackedEvents}" liveScrolling="true"
		resizableColumns="false" variableRowHeight="true" sortableColumns="true" wordWrap="true">
		<mx:columns>
			<mx:DataGridColumn headerText="Start" dataField="startDateTime" width="100"/>
			<mx:DataGridColumn headerText="Description" dataField="description" sortable="false"/>
			<mx:DataGridColumn headerText="Duration" dataField="duration" width="100"/>
		</mx:columns>
	</mx:DataGrid>
	
	<s:HGroup width="100%" verticalAlign="middle">
		<mx:Spacer width="100%"/>
		<s:Button label="Client Manager" id="clientManagerBtn" click="clientManagerBtn_clickHandler(event)"/>
	</s:HGroup>
	
	<fx:Declarations>
		<mate:Dispatcher id="dispatcher"/>
		<eventMaps:MainEventMap/>
	</fx:Declarations>
</mx:WindowedApplication>
